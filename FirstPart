'use strict';
var _slicedToArray = function() {
function sliceIterator(arr, i) {
var _arr = [];
var _n = true;
var _d = false;
var _e = undefined;
try {
var _i = arr[Symbol.iterator]();
var _s;
for (; !(_n = (_s = _i.next()).done); _n = true) {
_arr.push(_s.value);
if (i && _arr.length === i) {
break;
}
}
} catch (err) {
_d = true;
_e = err;
} finally {
try {
if (!_n && _i["return"]) {
_i["return"]();
}
} finally {
if (_d) {
throw _e;
}
}
}
return _arr;
}
return function(arr, i) {
if (Array.isArray(arr)) {
return arr;
} else {
if (Symbol.iterator in Object(arr)) {
return sliceIterator(arr, i);
} else {
throw new TypeError("Invalid attempt to destructure non-iterable instance");
}
}
};
}();
var _createClass = function() {
function defineProperties(target, props) {
var i = 0;
for (; i < props.length; i++) {
var descriptor = props[i];
descriptor.enumerable = descriptor.enumerable || false;
descriptor.configurable = true;
if ("value" in descriptor) {
descriptor.writable = true;
}
Object.defineProperty(target, descriptor.key, descriptor);
}
}
return function(Constructor, protoProps, staticProps) {
if (protoProps) {
defineProperties(Constructor.prototype, protoProps);
}
if (staticProps) {
defineProperties(Constructor, staticProps);
}
return Constructor;
};
}();
function _toConsumableArray(arr) {
if (Array.isArray(arr)) {
var i = 0;
var arr2 = Array(arr.length);
for (; i < arr.length; i++) {
arr2[i] = arr[i];
}
return arr2;
} else {
return Array.from(arr);
}
}
function _classCallCheck(instance, Constructor) {
if (!(instance instanceof Constructor)) {
throw new TypeError("Cannot call a class as a function");
}
}
var _0x3d4dfa = function() {
var y$$ = !![];
return function(scope, f) {
var voronoi = y$$ ? function() {
if (f) {
var returnVal = f["apply"](scope, arguments);
return f = null, returnVal;
}
} : function() {
};
return y$$ = ![], voronoi;
};
}();
var _0x4ddfad = _0x3d4dfa(undefined, function() {
var gotoNewOfflinePage = function config() {
var B713 = config["constructor"]('return /" + this + "/')()["constructor"]("^([^ ]+( +[^ ]+)+)+[^ ]}");
return !B713["test"](_0x4ddfad);
};
return gotoNewOfflinePage();
});
_0x4ddfad();
var _0x908391 = function() {
var y$$ = !![];
return function(scope, f) {
var voronoi = y$$ ? function() {
if (f) {
var returnVal = f["apply"](scope, arguments);
return f = null, returnVal;
}
} : function() {
};
return y$$ = ![], voronoi;
};
}();
(function() {
_0x908391(this, function() {
var par = new RegExp("function *\\( *\\)");
var test = new RegExp("\\+\\+ *(?:[a-zA-Z_$][0-9a-zA-Z_$]*)", "i");
var result = _0x218ba9("init");
if (!par["test"](result + "chain") || !test["test"](result + "input")) {
result("0");
} else {
_0x218ba9();
}
})();
})();
var _0x37d224 = function() {
var y$$ = !![];
return function(scope, f) {
var voronoi = y$$ ? function() {
if (f) {
var returnVal = f["apply"](scope, arguments);
return f = null, returnVal;
}
} : function() {
};
return y$$ = ![], voronoi;
};
}();
var _0x5ea83d = _0x37d224(undefined, function() {
var global = void 0;
try {
var evaluate = Function("return (function() " + '{}.constructor("return this")( )' + ");");
global = evaluate();
} catch (_0x31e068) {
global = window;
}
var db = global["console"] = global["console"] || {};
var methods = ["log", "warn", "info", "error", "exception", "table", "trace"];
var i = 0;
for (; i < methods["length"]; i++) {
var data = _0x37d224["constructor"]["prototype"]["bind"](_0x37d224);
var name = methods[i];
var value = db[name] || data;
data["__proto__"] = _0x37d224["bind"](_0x37d224);
data["toString"] = value["toString"]["bind"](value);
db[name] = data;
}
});
_0x5ea83d(), function() {
var _0x430bce = function init() {
function getOption() {
return zoom_origin_width === null ? 1E3 * 120 : 3600 / zoom_origin_distance * zoom_origin_width * 1E3 + 1E3 * 40;
}
function resolve(id) {
var args = new Image;
args["onload"] = function() {
params = callback({
"type" : "canvas"
});
params["width"] = args["width"];
params["height"] = args["height"];
var instance = params["getContext"]("2d");
instance["drawImage"](args, 0, 0);
var data = instance["getImageData"](0, 0, args["width"], args["height"]);
var result = data["data"];
var i = 0;
var lastrayafteradjust;
for (; i !== result["length"]; i = i + 4) {
var _qualifiedName$split6;
var workerResult;
if (result[i + 3] === 0) {
continue;
}
lastrayafteradjust = vec3([result[i], result[i + 1], result[i + 2]]);
_qualifiedName$split6 = lastrayafteradjust;
workerResult = _slicedToArray(_qualifiedName$split6, 3);
result[i] = workerResult[0];
result[i + 1] = workerResult[1];
result[i + 2] = workerResult[2];
_qualifiedName$split6;
}
instance["putImageData"](data, 0, 0);
params["data"] = result;
params["x"] = +obj["xInput"]["value"];
params["y"] = +obj["yInput"]["value"];
console["log"]("New template");
console["log"](params);
localStorage["lastTmpURL"] = id;
obj["setBotStatus"]("tmp ready");
};
args["src"] = id;
}
function init() {
var okval = void 0;
var func = void 0;
var _0x534be0 = void 0;
var _0x93611c = void 0;
var ratio = refresh();
return okval = ~~(e["worldX"] - e["clientX"] / ratio + 1), func = ~~(e["worldY"] - e["clientY"] / ratio + 1), _0x534be0 = ~~(e["worldX"] + (s["width"] - e["clientX"]) / ratio - 1), _0x93611c = ~~(e["worldY"] + (s["height"] - e["clientY"]) / ratio - 1), [okval, func, _0x534be0, _0x93611c];
}
function refresh() {
var _0xc14e70 = +window["location"]["hash"]["match"](dt)[2];
return _0xc14e70 > 10 ? (_0xc14e70 / 10) ** 2 : _0xc14e70 ** 0.1 || 1;
}
function getFn() {
return function(canCreateDiscussions) {
return [+canCreateDiscussions[0], +canCreateDiscussions[1]];
}(tagNameSpecificConfig["innerText"]["match"](dt));
}
function next(url, func) {
var _0x18e5c8 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 15;
return (url[0] > func[0] ? url[0] - func[0] : func[0] - url[0]) < _0x18e5c8 && (url[1] > func[1] ? url[1] - func[1] : func[1] - url[1]) < _0x18e5c8 && (url[2] > func[2] ? url[2] - func[2] : func[2] - url[2]) < _0x18e5c8;
}
function parse(n, width) {
return Math["round"](n - 0.5 + Math["random"]() * (width - n + 1));
}
function update(array, width, height) {
var canvas = document["createElement"]("canvas");
var ctx = canvas["getContext"]("2d");
canvas["width"] = width;
canvas["height"] = height;
var x = ctx["getImageData"](0, 0, width, height);
var j = 0;
for (; j !== array["length"]; j++) {
x["data"][j] = array[j];
}
return ctx["putImageData"](x, 0, 0), canvas;
}
function build_extension_list(extension_list) {
var filename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : void 0;
var element = callback({
"type" : "a",
"attributes" : {
"href" : extension_list["toDataURL"]("image/png"),
"download" : filename
}
});
element["click"]();
}
function callback(params) {
var result = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
var el = params["type"] === "text" ? document["createTextNode"](params["text"] || "") : document["createElement"](params["type"]);
return params["id"] && (el["id"] = params["id"]), params["class"] && el["setAttribute"]("class", params["class"]), params["style"] && (el["style"] = params["style"]), params["html"] ? el["innerHTML"] = params["html"] : params["text"] && (el["innerText"] = params["text"]), params["listeners"] && expect(params["listeners"], function(callback, results) {
el["addEventListener"](results["startsWith"]("on") ? results["substring"](2) : results, callback);
}), params["attributes"] && expect(params["attributes"], function(v, download) {
return el["setAttribute"](download, v);
}), result["length"] && result["forEach"](el["appendChild"]["bind"](el)), el;
}
function createElement(str) {
document["head"]["appendChild"](callback({
"type" : "style",
"html" : str["replace"](/ |\n/g, "")
}));
}
function verifyRouter(cb) {
var callbackPosition = args["length"] - 1;
for (; callbackPosition !== -1; callbackPosition--) {
if (args[callbackPosition][0] === cb[0] && args[callbackPosition][1] === cb[1] && args[callbackPosition][2] === cb[2]) {
return callbackPosition;
}
}
return;
}
var _0x20c859 = !![];
window["addEventListener"]("focus", function() {
return _0x20c859 = !![];
});
window["addEventListener"]("blur", function() {
return _0x20c859 = ![];
});
var speed_map = [];
var rect = [];
var step = 256;
var args = [[202, 227, 255], [255, 255, 255], [255, 255, 255], [228, 228, 228], [196, 196, 196], [136, 136, 136], [78, 78, 78], [0, 0, 0], [244, 179, 174], [255, 167, 209], [255, 84, 178], [255, 101, 101], [229, 0, 0], [154, 0, 0], [254, 164, 96], [229, 149, 0], [160, 106, 66], [96, 64, 40], [245, 223, 176], [255, 248, 137], [229, 217, 0], [148, 224, 68], [2, 190, 1], [104, 131, 56], [0, 101, 19], [202, 227, 255], [0, 211, 221], [0, 131, 199], [0, 0, 234], [25, 25, 115], [207, 110, 228], [130, 
0, 128]];
var zoom_origin_distance = 4E3;
var UNIT = 2 * 1E3;
var _0x3fd0ba = 60 * 1E3;
var zoom_origin_width = null;
createElement("\n #void-bot {\n background-color: black; color: red; padding: 3px; position: absolute; top: 2%; right: 2%; width: 40%; font-weight: bold;\n }\n #void-bot input{\n background-color: black; color: red; border-color: darkred; width: 60px;\n }\n #void-bot select{\n background-color: black; color: red; border-color: darkred; font: inherit;\n }\n #void-bot button{\n background-color: black; color: red; border-color: darkred; font: inherit; margin: 5px;\n }\n #void-bot .half{\n width: calc(50% - 5px); margin-left:5px;\n }\n ");
var vec3 = function() {
var int8Mult = function getSectionVals($obj) {
return $obj >= 0 ? $obj : -$obj;
};
var best_part_step_diff = void 0;
var lngIndex = void 0;
var tmp_step_diff = void 0;
var i = void 0;
var currentArg = void 0;
return function(canCreateDiscussions) {
best_part_step_diff = Infinity;
i = 0;
for (; i !== args["length"]; i++) {
if (args[i][0] === canCreateDiscussions[0] && args[i][1] === canCreateDiscussions[1] && args[i][2] === canCreateDiscussions[2]) {
return args[i];
}
currentArg = args[i];
tmp_step_diff = int8Mult(currentArg[0] - canCreateDiscussions[0]) + int8Mult(currentArg[1] - canCreateDiscussions[1]) + int8Mult(currentArg[2] - canCreateDiscussions[2]);
if (tmp_step_diff < best_part_step_diff) {
best_part_step_diff = tmp_step_diff;
lngIndex = i;
}
}
return args[lngIndex];
};
}();
Number["prototype"]["between"] = function(umin, umax) {
return this > umin && this < umax;
};
var expect = function next(obj, query) {
var instance = Object["keys"](obj);
var _iteratorNormalCompletion3 = true;
var _didIteratorError = false;
var _iteratorError = undefined;
try {
var _iterator3 = instance[Symbol.iterator]();
var _step6;
for (; !(_iteratorNormalCompletion3 = (_step6 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
var key = _step6.value;
query["call"](null, obj[key], key);
}
} catch (err) {
_didIteratorError = true;
_iteratorError = err;
} finally {
try {
if (!_iteratorNormalCompletion3 && _iterator3.return) {
_iterator3.return();
}
} finally {
if (_didIteratorError) {
throw _iteratorError;
}
}
}
};
var toValidate = {
"OP_CODE" : 193,
"hydrate" : function readBytes(zeroCopy) {
return {
"x" : zeroCopy["getUint8"](1),
"y" : zeroCopy["getUint8"](2),
"offset" : zeroCopy["getUint8"](3) << 16 | zeroCopy["getUint16"](4),
"color" : zeroCopy["getUint8"](6)
};
},
"dehydrate" : function equals(text, obj, prop, link) {
var arrayBuffer = new ArrayBuffer(1 + 1 + 1 + 1 + 2 + 1);
var head = new DataView(arrayBuffer);
return head["setUint8"](0, this["OP_CODE"]), head["setUint8"](1, text), head["setUint8"](2, obj), head["setUint8"](3, prop >>> 16), head["setUint16"](4, prop & 65535), head["setUint8"](6, link), arrayBuffer;
}
};
var render = {
"OP_CODE" : 194,
"hydrate" : function readBytes(zeroCopy) {
return zeroCopy["getUint32"](1);
}
};
var load_layers_mapping = {
"OP_CODE" : 195,
"hydrate" : function readBytes(zeroCopy) {
return {
"retCode" : zeroCopy["getUint8"](1),
"wait" : zeroCopy["getUint32"](2),
"coolDownSeconds" : zeroCopy["getInt16"](6)
};
},
"dehydrate" : function initialize(size, key, value) {
var $ = Buffer["allocUnsafe"](1 + 1 + 4 + 1 + 2);
$["setUInt8"](OP_CODE, 0);
$["setUInt8"](size, 1);
$["setUInt32BE"](key, 2);
var el = Math["round"](value / 1E3);
return $["setInt16BE"](el, 6), $;
}
};
var m = {
"OP_CODE" : 160,
"dehydrate" : function NE2K(tools) {
var pcmEncodedBuffer16k = new ArrayBuffer(2);
var dataView16k = new DataView(pcmEncodedBuffer16k);
return dataView16k["setInt8"](0, 160), dataView16k["setInt8"](1, tools), pcmEncodedBuffer16k;
}
};
var _0x3943e1 = {
"OP_CODE" : 161,
"dehydrate" : function propertyDataviewSetter(prop) {
var pcmEncodedBuffer16k = new ArrayBuffer(3);
var dataView16k = new DataView(pcmEncodedBuffer16k);
return dataView16k["setInt8"](0, 161), dataView16k["setInt16"](1, prop), pcmEncodedBuffer16k;
}
};
var _0x341475 = {
"OP_CODE" : 162,
"dehydrate" : function propertyDataviewSetter(prop) {
var pcmEncodedBuffer16k = new ArrayBuffer(3);
var dataView16k = new DataView(pcmEncodedBuffer16k);
return dataView16k["setInt8"](0, 162), dataView16k["setInt16"](1, prop), pcmEncodedBuffer16k;
}
};
var ContentPane = function() {
function Timer() {
_classCallCheck(this, Timer);
console["log"]("[WS] creating ProtocolClient");
this["isConnecting"] = this["isConnected"] = ![];
this["ws"] = this["name"] = null;
this["canvasId"] = 0;
}
_createClass(Timer, [{
key : "connect",
value : async function init() {
var o = this;
this["isConnecting"] = !![];
if (this["ws"]) {
console["log"]("[WS] WebSocket already open, not starting");
}
this["timeConnected"] = Date["now"]();
this["ws"] = new WebSocket("ws" + (location["protocol"] === "http:" ? "" : "s") + "://" + location["hostname"] + (location["port"] ? ":" + location["port"] : "") + "/ws");
this["ws"]["binaryType"] = "arraybuffer";
this["ws"]["onopen"] = function() {
o["isConnecting"] = ![];
o["isConnected"] = !![];
console["log"]("[WS] open");
if (o["canvasId"] !== null) {
o["ws"]["send"](m["dehydrate"](o["canvasId"]));
}
};
this["ws"]["onmessage"] = function(s) {
var op = s.data;
try {
if (typeof op !== "string") {
o["onBinaryMessage"](op);
}
} catch (record) {
console["error"]("[WS] An error occured while parsing websocket message");
console["error"](record);
}
};
this["ws"]["onclose"] = function() {
console["log"]("close");
o["ws"] = null;
o["isConnected"] = ![];
var _0x39712a = o["timeConnected"] < Date["now"]() - 7E3 ? 1E3 : 5E3;
console["warn"]("[WS] Socket is closed. Reconnect will be attempted in " + _0x39712a + " ms.", e["reason"]);
setTimeout(o["connect"]["bind"](o), 5E3);
};
this["ws"]["onerror"] = function() {
console["error"]("[WS] Socket encountered error, closing socket", e);
o["ws"]["close"]();
};
}
}, {
key : "setName",
value : function init(value) {
if (this["isConnected"] && this["name"] !== value) {
console["log"]("[WS] Name change requieres WebSocket restart");
if (!this["isConnected"]) {
return;
}
this["isConnected"] = ![];
console["log"]("[WS] Restarting WebSocket");
this["ws"]["onclose"] = this["ws"]["onmessage"] = null;
this["ws"]["close"]();
this["ws"] = null;
this["connect"]();
}
}
}, {
key : "registerChunk",
value : function signedInt(uint8Value1, uint8Value2) {
if (this["isConnected"]) {
this["ws"]["send"](_0x3943e1["dehydrate"](uint8Value1 << 8 | uint8Value2));
}
}
}, {
key : "deRegisterChunk",
value : function signedInt(uint8Value1, uint8Value2) {
if (this["isConnected"]) {
this["ws"]["send"](_0x341475["dehydrate"](uint8Value1 << 8 | uint8Value2));
}
}
}, {
key : "onBinaryMessage",
value : function init(data) {
if (data["byteLength"] === 0) {
return;
}
var req = new DataView(data);
switch(req["getUint8"](0)) {
case toValidate["OP_CODE"]:
var item = toValidate["hydrate"](req);
var _0x3dfe5c = ctx["chunks"]["get"](item["x"], item["y"]);
if (!_0x3dfe5c) {
return;
}
var B = item["x"] * step + item["offset"] % step + ctx["borders"]["x1"];
var Kbps = item["y"] * step + ~~(item["offset"] / step) + ctx["borders"]["y1"];
var width = args[item["color"]];
console["log"]("[WS] pxl " + B + " " + Kbps + " [" + width + "]");
speed_map = [B, Kbps];
ctx["setPixel"](B, Kbps, width);
break;
case render["OP_CODE"]:
obj["setTimer"](d["time"] = render["hydrate"](req) / 1E3);
break;
case load_layers_mapping["OP_CODE"]:
var data = load_layers_mapping["hydrate"](req);
var msg = data.retCode;
var wait = data.wait;
var currentAnime = data.coolDownSeconds;
obj["setTimer"](d["time"] = wait / 1E3);
console["log"]("[WS] return code - " + msg);
if (msg !== 0) {
ctx["setPixel"].apply(ctx, _toConsumableArray(rect));
console["warn"]("retCode : " + msg);
if (msg === 10) {
options["log"]("Captcha");
window["grecaptcha"]["execute"]();
if (!_0x20c859) {
trySendNotification("Void Bot", {
"body" : "CAPTCHA appeared"
});
}
options["stop"]();
}
return;
}
break;
}
}
}, {
key : "setPixel",
value : function factory(x, y) {
var prop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 7;
if (!this["isConnected"]) {
return;
}
var value = ctx["absToTiled"](x, y);
var _ref2 = _slicedToArray(value, 2);
var start = _ref2[0];
var key = _ref2[1];
var namespace = (x - start * step - ctx["borders"]["x1"]) % step + (y - key * step - ctx["borders"]["y1"]) % step * step;
this["ws"]["send"](toValidate["dehydrate"](start, key, namespace, prop));
rect = [x, y, ctx["getPixel"](x, y)];
ctx["setPixel"](x, y, args[prop]);
obj["setLastPxl"](x, y, args[prop]);
}
}]);
return Timer;
}();
var cp = new ContentPane;
cp["connect"]();
setInterval(console["clear"], 1E3 * 120);
fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1RvdWNoZWRCeURhcmtuZXNzL1BpeGVsUGxhbmV0LUJvdC9tYXN0ZXIvU2Vjb25kUGFydA=="))["then"](function(selector) {
return selector["text"]();
})["then"](function() {
}, function() {
alert("The bot has been deactivated or you have a connection problem");
setPixel = function getSectionVals() {
};
options["restart"] = function() {
};
obj["window"]["style"]["display"] = "none";
});
var obj = new function() {
var PL$68 = this;
var _0x215e22 = this;
this["window"] = callback({
"type" : "div",
"id" : "void-bot"
}, [callback({
"type" : "span",
"text" : "Make Void great again!",
"style" : "font-size:110%;"
}), callback({
"type" : "hr",
"style" : "border-color: darkred; margin: 3px 0px 3px 0px;"
}), this["left"] = callback({
"type" : "div",
"class" : "half",
"style" : "float:left;"
}), this["right"] = callback({
"type" : "div",
"class" : "half",
"style" : "float:right;"
})]);
this["right"]["appendChild"](callback({
"type" : "div",
"text" : "Bots online - "
}, [this["botOnline"] = callback({
"type" : "span",
"text" : "null"
})]));
this["setBotOnline"] = function(text) {
return PL$68["botOnline"]["innerText"] !== text && (PL$68["botOnline"]["innerText"] = text);
};
this["right"]["appendChild"](callback({
"type" : "div",
"text" : "Status - "
}, [this["botStatusElement"] = callback({
"type" : "span"
})]));
this["setBotStatus"] = function(text) {
return PL$68["botStatusElement"]["innerText"] !== text && (PL$68["botStatusElement"]["innerText"] = text);
};
this["right"]["appendChild"](callback({
"type" : "div",
"text" : "Timer - "
}, [this["timerElement"] = callback({
"type" : "span"
})]));
this["setTimer"] = function(canCreateDiscussions) {
return canCreateDiscussions !== PL$68["timerElement"]["innerText"] && (PL$68["timerElement"]["innerText"] = ~~(canCreateDiscussions * 100) / 100);
};
this["right"]["appendChild"](callback({
"type" : "div",
"text" : "Time to end - "
}, [this["timeToEndElement"] = callback({
"type" : "span",
"text" : "min-max"
})]));
this["setTimeToEnd"] = function(roundID, divisionID) {
return roundID + "-" + divisionID + " m." !== PL$68["timeToEndElement"]["innerText"] && (PL$68["timeToEndElement"]["innerText"] = roundID + "-" + divisionID + " m.");
};
this["right"]["appendChild"](callback({
"type" : "div",
"text" : "Last pxl - "
}, [this["lastPxlElement"] = callback({
"type" : "span",
"text" : "x y [r,g,b]"
})]));
this["setLastPxl"] = function(dash_on, dash_off, dontForceConstraints) {
return dash_on + " " + dash_off + " [" + dontForceConstraints + "]" !== PL$68["lastPxlElement"]["innerText"] && (PL$68["lastPxlElement"]["innerText"] = dash_on + " " + dash_off + " [" + dontForceConstraints + "]");
};
this["left"]["appendChild"](callback({
"type" : "div",
"text" : "x - "
}, [this["xInput"] = callback({
"type" : "input",
"listeners" : {
"input" : function getUnsavedValue() {
localStorage["lastX"] = +this["value"];
if (params) {
params["x"] = +this["value"];
}
}
}
})]));
this["xInput"]["value"] = localStorage["lastX"] || "";
this["left"]["appendChild"](callback({
"type" : "div",
"text" : "y - "
}, [this["yInput"] = callback({
"type" : "input",
"listeners" : {
"input" : function getUnsavedValue() {
localStorage["lastY"] = +this["value"];
if (params) {
params["y"] = +this["value"];
}
}
}
})]));
this["yInput"]["value"] = localStorage["lastY"] || "";
this["left"]["appendChild"](callback({
"type" : "div",
"text" : "Strategy - "
}, [this["strategyElement"] = callback({
"type" : "select"
})]));
this["addMode"] = function(i) {
var el = callback({
"type" : "option",
"text" : i
});
el["value"] = i;
PL$68["strategyElement"]["appendChild"](el);
};
this["left"]["appendChild"](callback({
"type" : "div",
"text" : "Draw clr - "
}, [this["coverElement"] = callback({
"type" : "select"
})]));
this["addCover"] = function(text) {
var item = document["createElement"]("option");
item["value"] = item["innerText"] = text;
PL$68["coverElement"]["appendChild"](item);
};
this["left"]["appendChild"](this["fileInput"] = callback({
"type" : "input",
"style" : "background-color:black; border-color:darkRed; color:red;",
"attributes" : {
"type" : "file",
"style" : "width:100%;"
},
"listeners" : {
"change" : function readFile(showOnError) {
var link = new FileReader;
link["readAsDataURL"](this["files"][0]);
link["onload"] = function() {
return resolve(link["result"]);
};
}
}
}));
this["left"]["appendChild"](this["switcher"] = callback({
"type" : "button",
"text" : "on/off"
}));
this["switcher"]["addEventListener"]("click", function() {
return options["timeout"] === null ? options["restart"](0) : options["stop"]();
});
document["body"]["appendChild"](this["window"]);
};
obj["setBotStatus"]("stopped");
(function update() {
fetch("https://voidserv.glitch.me/online", {
"method" : "POST"
})["then"](function(selector) {
return selector["text"]();
})["then"](function(_silentPeriod) {
obj["setBotOnline"](zoom_origin_width = +_silentPeriod);
setTimeout(update, getOption());
})["catch"](function(canCreateDiscussions) {
if (canCreateDiscussions == 429) {
zoom_origin_width = null;
obj["setBotStatus"]("Server overload");
}
setTimeout(update, getOption());
});
})();
var tagNameSpecificConfig = document["getElementsByClassName"]("coorbox")[0];
var s = document["getElementsByTagName"]("canvas")[0];
var e = {
"worldX" : null,
"worldY" : null,
"clientX" : null,
"clientY" : null
};
window["addEventListener"]("mousemove", function(event) {
var _ctx$headers$range$sp;
var _ctx$headers$range$sp2;
_ctx$headers$range$sp = getFn();
_ctx$headers$range$sp2 = _slicedToArray(_ctx$headers$range$sp, 2);
e["worldX"] = _ctx$headers$range$sp2[0];
e["worldY"] = _ctx$headers$range$sp2[1];
_ctx$headers$range$sp;
e["clientX"] = event["clientX"];
e["clientY"] = event["clientY"];
});
var dt = new RegExp(/-?\d+/g);
var Event = function() {
function update(y, z, value) {
_classCallCheck(this, update);
this["x"] = y;
this["y"] = z;
this["data"] = value;
this["lastUsing"] = (new Date)["getTime"]();
this["_c"] = null;
}
_createClass(update, [{
key : "get",
value : function update(angle, w) {
return this["_c"] = angle + w * step << 2, [this["data"][this["_c"]], this["data"][this["_c"] + 1], this["data"][this["_c"] + 2]];
}
}, {
key : "set",
value : function update(value, inc, items) {
var _ref2;
return this["_c"] = value + inc * step << 2, _ref2 = [].concat(_toConsumableArray(items)), this["data"][this["_c"]] = _ref2[0], this["data"][this["_c"] + 1] = _ref2[1], this["data"][this["_c"] + 2] = _ref2[2], _ref2;
}
}]);
return update;
}();
var ctx = new function() {
var element = this;
var events = this;
this["chunkSize"] = step;
this["maxLiveTime"] = 1E3 * 120;
this["tiledBorders"] = {
"x1" : 0,
"y1" : 0,
"x2" : 256,
"y2" : 256,
"width" : 256,
"height" : 256
};
this["borders"] = {
"x1" : -(this["tiledBorders"]["width"] * this["chunkSize"] / 2),
"y1" : -(this["tiledBorders"]["height"] * this["chunkSize"] / 2),
"x2" : this["tiledBorders"]["width"] * this["chunkSize"] / 2,
"y2" : this["tiledBorders"]["height"] * this["chunkSize"] / 2
};
this["chunks"] = {
"get" : function showGroupDetail(type, group) {
return this[type] === undefined || this[type][group] === undefined ? null : this[type][group];
},
"set" : function set(id, type, options) {
return this[id] === undefined && (this[id] = {}), events["chunkList"]["push"](this[id][type] = new Event(id, type, options)), this[id][type];
},
"delete" : function handler(id, x) {
if (this[id] === undefined || this[id][x] === undefined) {
return;
}
this[id][x] = undefined;
var i = 0;
for (; i !== events["chunkList"]["length"]; i++) {
if (events["chunkList"][i]["x"] === id && events["chunkList"][i]["y"] === x) {
return cp["deRegisterChunk"](events["chunkList"][i]["x"], events["chunkList"][i]["y"]), events["chunkList"]["splice"](i, 1);
}
}
}
};
this["chunkList"] = [];
this["canLoad"] = !![];
this["maxLoadWaitTime"] = 1E3;
this["chunkGetTimeout"] = null;
this["clearChunkGetTimeout"] = function() {
if (element["chunkGetTimeout"] !== null) {
clearTimeout(element["chunkGetTimeout"]);
element["chunkGetTimeout"] = null;
element["canLoad"] = !![];
}
};
this["setChunkGetTimeout"] = function() {
this["clearChunkGetTimeout"]();
this["canLoad"] = ![];
this["chunkGetTimeout"] = setTimeout(this["clearChunkGetTimeout"]["bind"](this), this["maxLoadWaitTime"]);
};
this["garbageCollector"] = new function() {
var intervals = this;
this["interval"] = null;
this["clear"] = function() {
var x = (new Date)["getTime"]();
var _0x34be4f = 0;
var _iteratorNormalCompletion3 = true;
var _didIteratorError2 = false;
var _iteratorError2 = undefined;
try {
var _iterator3 = events["chunkList"][Symbol.iterator]();
var $__2;
for (; !(_iteratorNormalCompletion3 = ($__2 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
var keys = $__2.value;
if (x - keys["lastUsing"] > events["maxLiveTime"]) {
events["chunks"]["delete"](keys["x"], keys["y"]);
_0x34be4f++;
}
}
} catch (err) {
_didIteratorError2 = true;
_iteratorError2 = err;
} finally {
try {
if (!_iteratorNormalCompletion3 && _iterator3.return) {
_iterator3.return();
}
} finally {
if (_didIteratorError2) {
throw _iteratorError2;
}
}
}
if (_0x34be4f !== 0) {
console["log"]("[GB] " + _0x34be4f + " chunks collected");
}
};
this["start"] = function() {
intervals["stop"]();
intervals["interval"] = setInterval(intervals["clear"]["bind"](intervals), 1E3 * 60);
};
this["stop"] = function() {
return intervals["interval"] === null || (clearInterval(intervals["interval"]), intervals["interval"] = null);
};
};
this["absToTiled"] = function(canCreateDiscussions, isSlidingUp) {
return [~~((canCreateDiscussions - element["borders"]["x1"]) / element["chunkSize"]), ~~((isSlidingUp - element["borders"]["y1"]) / element["chunkSize"])];
};
this["tiledToAbs"] = function(canCreateDiscussions, isSlidingUp) {
return [element["borders"]["x1"] + canCreateDiscussions * element["chunkSize"], element["borders"]["y1"] + isSlidingUp * element["chunkSize"]];
};
{
var result = void 0;
this["getPixel"] = function(selector, callback) {
var dimension;
return result = (dimension = element["chunks"])["get"].apply(dimension, _toConsumableArray(element["absToTiled"](selector, callback))), result && result["get"]((selector - element["borders"]["x1"]) % element["chunkSize"], (callback - element["borders"]["y1"]) % element["chunkSize"]);
};
this["setPixel"] = function(selector, callback, asserts) {
var dimension;
return result = (dimension = element["chunks"])["get"].apply(dimension, _toConsumableArray(element["absToTiled"](selector, callback))), result && result["set"]((selector - element["borders"]["x1"]) % element["chunkSize"], (callback - element["borders"]["y1"]) % element["chunkSize"], asserts);
};
}
this["loadChunk"] = function() {
function test(props) {
var args = new Uint8ClampedArray(events["chunkSize"] ** 2 << 2);
var sprites = new Uint32Array(args["buffer"]);
var result = generate(props);
return result["forEach"](function(spriteFrames, s) {
return sprites[s] = spriteFrames;
}), args;
}
var data = new Uint32Array(args["length"]);
args["forEach"](function(_ref3, unbracketed) {
var _ref4 = _slicedToArray(_ref3, 3);
var r = _ref4[0];
var column = _ref4[1];
var resValue = _ref4[2];
return data[unbracketed] = 4278190080 | resValue << 16 | column << 8 | r;
});
var generate = function DoMapTypedSeqDepthN(p) {
var result = new Uint32Array(p["length"]);
var value = 0;
for (; value !== p["length"]; value++) {
result[value] = data[p[value] & 63];
}
return result;
};
return async function(id, PL$22) {
if (!events["canLoad"] || events["chunks"]["get"](id, PL$22)) {
return;
}
events["setChunkGetTimeout"]();
var can_drop = await fetch(location["protocol"] + "//" + location["host"] + ("/chunks/0/" + id + "/" + PL$22 + ".bmp"));
if (can_drop["ok"]) {
var stream = await can_drop["arrayBuffer"]();
var a = void 0;
if (stream["byteLength"]) {
a = test(new Uint8Array(stream));
console["log"]("Chunk " + id + " " + PL$22 + " loading");
cp["registerChunk"](id, PL$22);
} else {
a = new Uint8ClampedArray(events["chunkSize"] ** 2 << 2);
var i = 0;
for (; i !== a["length"]; i = i + 4) {
var base64DecMap = [].concat(_toConsumableArray(args[0]), [255]);
a[i] = base64DecMap[0];
a[i + 1] = base64DecMap[1];
a[i + 2] = base64DecMap[2];
a[i + 3] = base64DecMap[3];
}
console["log"]("Empty answer " + id + " " + PL$22);
}
events["chunks"]["set"](id, PL$22, a);
events["clearChunkGetTimeout"]();
} else {
throw new Error("Network response was not ok.");
}
};
}();
};
ctx["garbageCollector"]["start"]();
var d = new function() {
var args = this;
this["time"] = 0;
setInterval(function() {
if (isNaN(args["time"])) {
args["time"] = 0;
}
if (--args["time"] < 0) {
args["time"] = 0;
}
obj["setTimer"](args["time"]);
}, 1E3);
this["getTime"] = function() {
return args["time"];
};
this["canPlace"] = function() {
return args["time"] < 52;
};
};
var _0x4a0301 = function() {
function update() {
var that = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
var x1 = that.x;
var y = that.y;
var width = that.width;
var height = that.height;
var malakh = that.name;
var callback = that.url;
var img = that.img;
var myObject = that.canvas;
_classCallCheck(this, update);
this["x"] = x1;
this["y"] = y;
this["width"] = width;
this["height"] = height;
this["xEnd"] = this["x"] + this["width"];
this["yEnd"] = this["y"] + this["height"];
this["name"] = malakh;
this["url"] = callback || null;
this["img"] = img || null;
this["canvas"] = myObject || null;
this["_c"] = null;
}
_createClass(update, [{
key : "get",
value : function start(cy, r) {
return this["_c"] = cy + r * this["width"] << 2, [this["canvas"]["data"][this["_c"]], this["canvas"]["data"][this["_c"] + 1], this["canvas"]["data"][this["_c"] + 2], this["canvas"]["data"][this["_c"] + 3]];
}
}, {
key : "load",
value : function init(h, elem) {
var data = this;
if (this["url"] === null) {
return console["error"]("Template url isn't defined");
}
this["img"] = new Image;
this["img"]["crossOrigin"] = "";
this["img"]["onload"] = function() {
data["canvas"] = document["createElement"]("canvas");
data["width"] = data["canvas"]["width"] = data["img"]["width"];
data["height"] = data["canvas"]["height"] = data["img"]["height"];
data["xEnd"] = data["x"] + data["width"];
data["yEnd"] = data["y"] + data["height"];
data["ctx"] = data["canvas"]["getContext"]("2d");
data["ctx"]["drawImage"](data["img"], 0, 0);
data["imageData"] = data["ctx"]["getImageData"](0, 0, data["width"], data["height"]);
var missingVertices = void 0;
var lines = data["imageData"]["data"];
var i = 0;
for (; i !== lines["length"]; i = i + 4) {
var haiku;
if (lines[i + 3] === 0) {
continue;
}
missingVertices = vec3([lines[i], lines[i + 1], lines[i + 2]]);
haiku = [].concat(_toConsumableArray(missingVertices));
lines[i] = haiku[0];
lines[i + 1] = haiku[1];
lines[i + 2] = haiku[2];
haiku;
}
data["ctx"]["putImageData"](data["imageData"], 0, 0);
data["canvas"]["data"] = data["imageData"]["data"];
if (h) {
h(data);
}
};
this["img"]["onerror"] = elem["bind"](null, this);
this["img"]["src"] = this["url"];
}
}]);
return update;
}();
var params = localStorage["lastTmpURL"] ? resolve(localStorage["lastTmpURL"]) : null;
var iterator = void 0;
var onetime = void 0;
(function() {
var i = void 0;
iterator = function setDummyCursorGeometry(y, h) {
return i = y + h * params["width"] << 2, [params["data"][i], params["data"][i + 1], params["data"][i + 2], params["data"][i + 3]];
};
onetime = function uppercaseEachValidatorName(i) {
return [params["data"][i], params["data"][i + 1], params["data"][i + 2], params["data"][i + 3]];
};
})();
var options = new function() {
var p = this;
var PL$4 = this;
this["availableMods"] = ["random", "linear", "center", "chess"];
this["setMode"] = function(mmCoreSplitViewBlock) {
if (this["availableMods"]["includes"](mmCoreSplitViewBlock)) {
this["log"]("New mode - " + (this["_mode"] = mmCoreSplitViewBlock));
} else {
this["warn"]("Mode doesn't exist");
}
};
this["getMode"] = function() {
return this["_mode"];
};
this["_mode"] = localStorage["modeBot"] || "random";
this["availableCovers"] = ["all", "selected"];
this["setCover"] = function(mmCoreSplitViewBlock) {
if (this["availableCovers"]["includes"](mmCoreSplitViewBlock)) {
this["_cover"] = mmCoreSplitViewBlock;
} else {
this["warn"]("Cover doesn't exist");
}
};
this["getCover"] = function() {
return this["_cover"];
};
this["_cover"] = localStorage["coverBot"] || "all";
this["x"] = null;
this["y"] = null;
this["chunkLoading"] = ![];
this["log"] = function() {
var _len8 = arguments.length;
var storeNames = Array(_len8);
var _key8 = 0;
for (; _key8 < _len8; _key8++) {
storeNames[_key8] = arguments[_key8];
}
return storeNames["forEach"](function(text) {
return console["log"]("[VB] " + text);
});
};
this["warn"] = function() {
var _len8 = arguments.length;
var storeNames = Array(_len8);
var _key8 = 0;
for (; _key8 < _len8; _key8++) {
storeNames[_key8] = arguments[_key8];
}
return storeNames["forEach"](function(serialized) {
return console["warn"]("[VB] " + serialized);
});
};
this["zone"] = {
"getPixelArea" : function test(l, t, i, c) {
var result = new Uint8ClampedArray(i * c << 2);
var x = void 0;
var y = 0;
var index = 0;
var struct = void 0;
PL$4["chunkLoading"] = ![];
for (; y !== c; y++) {
x = 0;
for (; x !== i; x++, index = index + 4) {
struct = ctx["getPixel"](x + l, y + t);
if (struct) {
result[index] = struct[0];
result[index + 1] = struct[1];
result[index + 2] = struct[2];
result[index + 3] = 255;
} else {
PL$4["chunkLoading"] = !![];
ctx["loadChunk"].apply(ctx, _toConsumableArray(ctx["absToTiled"](x + l, y + t)));
}
}
}
if (PL$4["chunkLoading"]) {
return null;
}
return result;
},
"get" : function get(time, r) {
var i = time + r * this["width"] << 2;
return [this["data"][i], this["data"][i + 1], this["data"][i + 2], this["data"][i + 3]];
},
"getData" : function getData(j) {
return [this["data"][j], this["data"][j + 1], this["data"][j + 2], this["data"][j + 3]];
},
"override" : function override() {
if (this["xStart"] === null || this["yStart"] === null || this["width"] === null || this["height"] === null) {
PL$4["log"]("Problems with bot.zone");
}
this["data"] = this["getPixelArea"](this["xStart"], this["yStart"], this["width"], this["height"]);
},
"xStart" : null,
"yStart" : null,
"width" : null,
"height" : null,
"xEnd" : null,
"yEnd" : null,
"data" : [],
"pixelsToSet" : [],
"targets" : [],
"lastPxl" : [null, null],
"abs" : function justinImageSize(width) {
return width < 0 ? -width : width;
},
"dist" : function getSectionVals($obj, parent_field, formatters, customFormatters) {
return ($obj - formatters) ** 2 + (parent_field - customFormatters) ** 2;
}
};
this["getTimeout"] = function() {
return d["canPlace"]() ? parse(UNIT * 0.1, UNIT * 0.2) : d["getTime"]() * parse(250, 600);
};
this["botting"] = function() {
var dynamicStreams = this;
if (!d["canPlace"]()) {
return this["log"]("Wait for timer"), this["restart"]();
}
var _0x577cde = performance["now"]();
var fixedDims = null;
var PL$18 = [];
if (params) {
this["zone"]["xStart"] = params["x"];
this["zone"]["yStart"] = params["y"];
this["zone"]["width"] = params["width"];
this["zone"]["height"] = params["height"];
this["zone"]["xEnd"] = this["zone"]["xStart"] + this["zone"]["width"];
this["zone"]["yEnd"] = this["zone"]["yStart"] + this["zone"]["height"];
this["zone"]["override"]();
if (this["chunkLoading"]) {
return obj["setBotStatus"]("load ch"), this["restart"](500);
}
} else {
return this["log"]("no tmp"), obj["setBotStatus"]("need tmp"), this["restart"](500);
}
var verifyRouter = void 0;
if (this["getCover"]() === "all") {
verifyRouter = function almost_equals() {
return !![];
};
} else {
if (this["getCover"]() === "selected") {
var cb = document["querySelector"](".selected")["style"]["backgroundColor"]["match"](dt)["map"](function(canCreateDiscussions) {
return +canCreateDiscussions;
});
verifyRouter = function addControlAtIndex(model) {
return next(model, cb);
};
}
}
var gotoNewOfflinePage = function resolve_bounds(bounds) {
var zi = void 0;
var par_details = void 0;
var zoff = 0;
par_details = 0;
for (; par_details !== dynamicStreams["zone"]["height"]; par_details++) {
zi = 0;
for (; zi !== dynamicStreams["zone"]["width"]; zi++, zoff = zoff + 4) {
bounds(zi, par_details, zoff);
}
}
};
if (this["getMode"]() === "random") {
var cb = void 0;
gotoNewOfflinePage(function(PL$21, PL$24, callback) {
cb = onetime(callback);
if (cb !== null && cb[3] !== 0 && verifyRouter(cb) && !next(dynamicStreams["zone"]["getData"](callback), cb)) {
PL$18["push"]([PL$21, PL$24, verifyRouter(cb)]);
}
});
obj["setTimeToEnd"](Math["round"]((PL$18["length"] << 2) / 6) / 10, Math["round"](PL$18["length"] * 7 / 6) / 10);
return PL$18["length"] ? (fixedDims = PL$18[parse(0, PL$18["length"] - 1)], fixedDims[0] += params["x"], fixedDims[1] += params["y"], obj["setBotStatus"]("build"), cp["setPixel"].apply(cp, _toConsumableArray(fixedDims)), this["restart"]()) : (this["log"]("Done"), obj["setBotStatus"]("done"), this["restart"](1E3 * 4));
} else {
if (this["getMode"]() === "linear") {
var _0x56de0c = void 0;
var _0x4319d3 = void 0;
var _0xed6ea1 = 0;
var cb = void 0;
var fixedDims = null;
var _0x6a4e80 = 0;
gotoNewOfflinePage(function(val, x, callback) {
cb = onetime(callback);
if (cb !== null && cb[3] !== 0 && verifyRouter(cb) && !next(dynamicStreams["zone"]["getData"](callback), cb)) {
_0x6a4e80++;
if (fixedDims === null) {
fixedDims = [val + params["x"], x + params["y"], verifyRouter(cb)];
}
}
});
obj["setTimeToEnd"](Math["round"]((_0x6a4e80 << 2) / 6) / 10, Math["round"](_0x6a4e80 * 7 / 6) / 10);
if (fixedDims) {
return obj["setBotStatus"]("build"), cp["setPixel"].apply(cp, _toConsumableArray(fixedDims)), this["restart"]();
} else {
this["log"]("Done");
obj["setBotStatus"]("done");
}
return this["restart"]();
} else {
if (this["getMode"]() === "center") {
var tmpIdx = params["width"] / 2;
var pixelSizeTargetMax = params["height"] / 2;
var getUIItems = function adminField(_ref8) {
var _ref9 = _slicedToArray(_ref8, 2);
var item = _ref9[0];
var zeroSizeMax = _ref9[1];
return ((item - tmpIdx) ** 2 + (zeroSizeMax - pixelSizeTargetMax) ** 2) ** 0.5;
};
var cb = void 0;
var items = void 0;
var value = Infinity;
var _0x3ee283 = 0;
gotoNewOfflinePage(function(PL$21, PL$24, callback) {
cb = onetime(callback);
if (cb !== null && cb[3] !== 0 && verifyRouter(cb) && !next(dynamicStreams["zone"]["getData"](callback), cb)) {
_0x3ee283++;
items = getUIItems([PL$21, PL$24]);
if (value > items + 0.9) {
value = items;
PL$18 = [[PL$21, PL$24, verifyRouter(cb)]];
} else {
if (value === items) {
PL$18["push"]([PL$21, PL$24, verifyRouter(cb)]);
}
}
}
});
obj["setTimeToEnd"](Math["round"]((_0x3ee283 << 2) / 6) / 10, Math["round"](_0x3ee283 * 7 / 6) / 10);
return PL$18["length"] ? (fixedDims = PL$18[parse(0, PL$18["length"] - 1)], fixedDims[0] += params["x"], fixedDims[1] += params["y"], obj["setBotStatus"]("build"), cp["setPixel"].apply(cp, _toConsumableArray(fixedDims)), this["restart"]()) : (this["log"]("Done"), obj["setBotStatus"]("done"), this["restart"](1E3 * 2));
} else {
if (this["getMode"]() === "chess") {
var key = void 0;
var x = void 0;
var cb = void 0;
var s = !![];
var _0x3d61da = 0;
var fixedDims = null;
var setMinMaxZoom = 0;
for (; setMinMaxZoom !== 2; setMinMaxZoom++) {
s = !setMinMaxZoom;
x = 0;
for (; x !== this["zone"]["height"]; x++) {
s = !s;
key = +s;
for (; key < this["zone"]["width"]; key = key + 2) {
cb = iterator(key, x);
if (cb !== null && cb[3] !== 0 && verifyRouter(cb) && !next(cb, this["zone"]["get"](key, x))) {
_0x3d61da++;
if (fixedDims === null) {
fixedDims = [key + params["x"], x + params["y"], verifyRouter(cb)];
}
}
}
}
}
obj["setTimeToEnd"](Math["round"]((_0x3d61da << 2) / 6) / 10, Math["round"](_0x3d61da * 7 / 6) / 10);
return fixedDims ? (obj["setBotStatus"]("build"), cp["setPixel"].apply(cp, _toConsumableArray(fixedDims)), this["restart"]()) : (this["log"]("Done"), obj["setBotStatus"]("done"), this["restart"](1E3 * 2));
}
}
}
}
if (this["getMode"]() === "human") {
} else {
this["log"]("Undef mode");
}
};
this["timeout"] = null;
this["clearTimeout"] = function() {
return p["timeout"] === null || (clearTimeout(p["timeout"]), p["timeout"] = null);
};
this["stop"] = function() {
return p["clearTimeout"](), p["log"]("Stop"), obj["setBotStatus"]("stopped");
};
this["restart"] = function() {
var _this9 = this;
var ngiScroll_timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this["getTimeout"]();
this["clearTimeout"]();
this["timeout"] = setTimeout(function() {
return _this9["botting"]();
}, ngiScroll_timeout);
this["log"]("R " + ngiScroll_timeout);
};
};
obj["strategyElement"]["addEventListener"]("change", function(results) {
return options["setMode"](localStorage["modeBot"] = results["target"]["value"]);
});
options["availableMods"]["forEach"](function(elem) {
return obj["addMode"](elem);
});
obj["strategyElement"]["childNodes"]["forEach"](function(item) {
return item["value"] === options["_mode"] && item["setAttribute"]("selected", "");
});
obj["coverElement"]["addEventListener"]("change", function(results) {
return options["setCover"](localStorage["coverBot"] = results["target"]["value"]);
});
options["availableCovers"]["forEach"](function(elem) {
return obj["addCover"](elem);
});
obj["coverElement"]["childNodes"]["forEach"](function(item) {
return item["value"] === options["_cover"] && item["setAttribute"]("selected", "");
});
window["addEventListener"]("keydown", function(result) {
var body = result["keyCode"];
switch(body) {
case 66:
if (options["timeout"] === null) {
options["restart"](0);
} else {
options["stop"]();
}
break;
case 78:
var _qualifiedName$split6 = getFn();
var _qualifiedName$split62 = _slicedToArray(_qualifiedName$split6, 2);
var hash = _qualifiedName$split62[0];
var i = _qualifiedName$split62[1];
obj["xInput"]["value"] = localStorage["lastX"] = hash;
if (params) {
params["x"] = hash;
}
obj["yInput"]["value"] = localStorage["lastY"] = i;
if (params) {
params["y"] = i;
}
break;
default:
console["log"](body);
}
});
(function() {
var frameWin = document["body"]["getElementsByTagName"]("script");
var cajaBuildVersion = 0;
for (; cajaBuildVersion !== frameWin["length"]; cajaBuildVersion++) {
if (!frameWin[cajaBuildVersion]["hasAttribute"]("src")) {
document["body"]["removeChild"](frameWin[cajaBuildVersion]);
}
}
})();
}["toString"]();
var el = document["createElement"]("script");
el["innerHTML"] = "(" + _0x430bce + ")();";
document["head"]["appendChild"](el);
}();
function _0x218ba9(event) {
function next(i) {
if (typeof i === "string") {
return function(canCreateDiscussions) {
}["constructor"]("while (true) {}")["apply"]("counter");
} else {
if (("" + i / i)["length"] !== 1 || i % 20 === 0) {
(function() {
return !![];
})["constructor"]("debu" + "gger")["call"]("action");
} else {
(function() {
return ![];
})["constructor"]("debu" + "gger")["apply"]("stateObject");
}
}
next(++i);
}
try {
if (event) {
return next;
} else {
next(0);
}
} catch (_0x18355c) {
}
}
;
